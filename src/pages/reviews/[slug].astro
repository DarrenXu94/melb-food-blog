---
import Layout from '../../layouts/Layout.astro';
import { getAllReviews, getMarkdownFromReview } from '../../utils/api';
import { reviewDbRowToObject } from '../../utils/mappers';
import { toCamelCaseAndRemoveSpecialChars } from '../../utils/string';

// Define static paths for the dynamic route
export async function getStaticPaths() {

const res = await getAllReviews();

const paths = res.reviews
  .map((review) => {
    const mappedReview = reviewDbRowToObject(review);
    return {
      params: { slug: toCamelCaseAndRemoveSpecialChars(mappedReview.properties.name) },
    };
  })

  
  return paths;
}

// Get the review ID from the URL
const { slug } = Astro.params;

const res = await getAllReviews();
const allReviews = res.reviews.map(reviewDbRowToObject);

const findReview = allReviews.find(
	(r) => toCamelCaseAndRemoveSpecialChars(r.properties.name) === slug
);



const review = findReview || {
	properties: {
		name: "Review Not Found",
		cuisineType: ["N/A"],
		suburb: "N/A",
		priceRange: "N/A",
		rating: 0
	},
	created_time: '',
	id: ''
};

const markdown = review.id.length ? await getMarkdownFromReview(review.id) : '';


const hasReview = review;
---

<Layout title={`${review.properties.name} - Melbourne Food Blog`}>
	{hasReview ? (
		<article class="review-page">
			<!-- Hero Section -->
			<section class="review-hero">
				<div class="container">
					<div class="review-hero__content">
						{/* <div class="review-hero__image">
							<img src={review.image} alt={review.title} />
						</div> */}
						<div class="review-hero__info">
							<h1 class="review-title">{review.properties.name}</h1>
							<div class="review-meta">
								<div class="review-rating">
									<span class="rating-label">Rating:</span>
									<span class="rating-value">{review.properties.rating}/10</span>
								</div>
								<div class="review-details">
									<span class="cuisine">{review.properties.cuisineType}</span>
									<span class="location">{review.properties.suburb}</span>
									<span class="price">{review.properties.priceRange}</span>
								</div>
							</div>
						</div>
					</div>
				</div>
			</section>

			<!-- Review Content -->
			<section class="review-content">
				<div class="container">
					<div class="review-body">
						<div class="review-text" set:html={markdown.review}></div>
						
						
						<div class="review-footer">
							
							<div class="review-date">
								<span class="date-label">Date:</span>
								<span class="date-value">{new Date(review.created_time).toDateString()}</span>
							</div>
						</div>
					</div>
				</div>
			</section>

			<!-- Related Reviews -->
			<section class="related-reviews">
				<div class="container">
					<h2 class="related-title">More Reviews</h2>
					<div class="related-links">
						<a href="/reviews" class="btn btn--outline">View All Reviews</a>
						<a href="/reviews?cuisine={review.cuisine.toLowerCase()}" class="btn btn--primary">
							More {review.properties.cuisineType} Restaurants
						</a>
					</div>
				</div>
			</section>
		</article>
	) : (
		<div class="error-page">
			<div class="container">
				<div class="error-content">
					<h1 class="error-title">Review Not Found</h1>
					<p class="error-message">The review you're looking for could not be found.</p>
					<a href="/reviews" class="btn btn--primary">Browse All Reviews</a>
				</div>
			</div>
		</div>
	)}
</Layout>

<style>
	.review-page {
		padding: 0;
	}
	
	.review-hero {
		background-color: var(--color-gray-50);
		padding: var(--spacing-12) 0;
		border-bottom: 1px solid var(--color-gray-200);
	}
	
	.review-hero__content {
		display: grid;
		gap: var(--spacing-8);
		grid-template-columns: 1fr;
		
		@media (min-width: 768px) {
			grid-template-columns: 400px 1fr;
			align-items: center;
		}
	}
	
	.review-hero__image {
		width: 100%;
		border-radius: var(--radius-lg);
		overflow: hidden;
		box-shadow: var(--shadow-lg);
	}
	
	.review-hero__image img {
		width: 100%;
		height: 300px;
		object-fit: cover;
		
		@media (min-width: 768px) {
			height: 400px;
		}
	}
	
	.review-title {
		font-size: var(--font-size-4xl);
		font-weight: var(--font-weight-bold);
		margin-bottom: var(--spacing-6);
		color: var(--color-gray-900);
	}
	
	.review-meta {
		display: flex;
		flex-direction: column;
		gap: var(--spacing-4);
	}
	
	.review-rating {
		display: flex;
		align-items: center;
		gap: var(--spacing-2);
		font-size: var(--font-size-lg);
	}
	
	.rating-label {
		color: var(--color-gray-600);
		font-weight: var(--font-weight-medium);
	}
	
	.rating-value {
		color: var(--color-primary);
		font-weight: var(--font-weight-bold);
		font-size: var(--font-size-xl);
	}
	
	.review-details {
		display: flex;
		flex-wrap: wrap;
		gap: var(--spacing-4);
	}
	
	.review-details span {
		background-color: var(--color-white);
		padding: var(--spacing-2) var(--spacing-4);
		border-radius: var(--radius-md);
		font-size: var(--font-size-sm);
		font-weight: var(--font-weight-medium);
		border: 1px solid var(--color-gray-200);
	}
	
	.review-content {
		padding: var(--spacing-12) 0;
	}
	
	.review-body {
		max-width: 800px;
		margin: 0 auto;
	}
	
	.review-text {
		font-size: var(--font-size-lg);
		line-height: var(--line-height-relaxed);
		color: var(--color-gray-800);
		margin-bottom: var(--spacing-12);
	}
	
	.review-text h2 {
		font-size: var(--font-size-2xl);
		margin-top: var(--spacing-8);
		margin-bottom: var(--spacing-4);
		color: var(--color-gray-900);
	}
	
	.review-text h3 {
		font-size: var(--font-size-xl);
		margin-top: var(--spacing-6);
		margin-bottom: var(--spacing-3);
		color: var(--color-gray-900);
	}
	
	.review-text ul {
		margin: var(--spacing-4) 0;
		padding-left: var(--spacing-6);
	}
	
	.review-text li {
		margin-bottom: var(--spacing-2);
	}
	
	.review-footer {
		display: flex;
		justify-content: space-between;
		align-items: center;
		padding: var(--spacing-6);
		background-color: var(--color-gray-50);
		border-radius: var(--radius-lg);
		border: 1px solid var(--color-gray-200);
		flex-wrap: wrap;
		gap: var(--spacing-4);
	}
	
	.review-author,
	.review-date {
		display: flex;
		align-items: center;
		gap: var(--spacing-2);
	}
	
	.author-label,
	.date-label {
		color: var(--color-gray-600);
		font-weight: var(--font-weight-medium);
	}
	
	.author-name,
	.date-value {
		color: var(--color-gray-900);
		font-weight: var(--font-weight-semibold);
	}
	
	.related-reviews {
		background-color: var(--color-gray-50);
		padding: var(--spacing-12) 0;
		border-top: 1px solid var(--color-gray-200);
	}
	
	.related-title {
		text-align: center;
		margin-bottom: var(--spacing-8);
		font-size: var(--font-size-2xl);
	}
	
	.related-links {
		display: flex;
		justify-content: center;
		gap: var(--spacing-4);
		flex-wrap: wrap;
	}
	
	.error-page {
		padding: var(--spacing-16) 0;
		text-align: center;
	}
	
	.error-content {
		max-width: 500px;
		margin: 0 auto;
	}
	
	.error-title {
		font-size: var(--font-size-4xl);
		margin-bottom: var(--spacing-6);
		color: var(--color-gray-900);
	}
	
	.error-message {
		font-size: var(--font-size-lg);
		color: var(--color-gray-600);
		margin-bottom: var(--spacing-8);
	}
</style>
