---
import Layout from "../layouts/Layout.astro";
import ReviewCard from "../components/ReviewCard.astro";
import CategoryCard from "../components/CategoryCard.astro";

import { getAllReviews, getCategories } from "../utils/api";
import {
  allReviewsMappedToLocationAndCuisine,
  categoriesToOptions,
  reviewDbRowToObject,
} from "../utils/mappers";
import { capitalize, toCamelCaseAndRemoveSpecialChars } from "../utils/string";

const res = await getAllReviews();

const sortedTopRatedReviews = res.reviews
  .map((review) => {
    const mappedReview = reviewDbRowToObject(review);
    return {
      ...mappedReview,
      href: `/reviews/${toCamelCaseAndRemoveSpecialChars(mappedReview.properties.name)}`,
    };
  })
  .sort(
    (a, b) => parseFloat(b.properties.rating) - parseFloat(a.properties.rating)
  )
  .slice(0, 3);

const reduceToCuisineAndLocation = allReviewsMappedToLocationAndCuisine(res);
const cuisineTypes = Object.keys(reduceToCuisineAndLocation.cuisines)
  .map((cuisine) => ({
    name: cuisine,
    count: reduceToCuisineAndLocation.cuisines[cuisine].length,
  }))
  .sort((a, b) => {
    return a.count < b.count ? 1 : -1;
  })
  .slice(0, 6);

const locations = Object.keys(reduceToCuisineAndLocation.locations)
  .map((location) => ({
    name: location,
    count: reduceToCuisineAndLocation.locations[location].length,
  }))
  .sort((a, b) => {
    return a.count < b.count ? 1 : -1;
  })
  .slice(0, 6);
---

<Layout title="Melbourne Food Blog - Discover Amazing Restaurants">
  <!-- Hero Section -->
  <!-- <section class="hero">
    <div class="container">
      <div class="hero__content">
        <h1 class="hero__title">Discover Melbourne's Best Restaurants</h1>
        <p class="hero__subtitle">
          From hidden gems to fine dining, explore our curated collection of
          Melbourne's most delicious experiences.
        </p>
        <div class="hero__actions">
          <a href="/reviews" class="btn btn--primary btn--lg">Browse Reviews</a>
          <a href="/search" class="btn btn--outline btn--lg"
            >Search Restaurants</a
          >
        </div>
      </div>
    </div>
  </section> -->

  <!-- Top Rated Reviews -->
  <section class="section">
    <div class="container">
      <h2 class="section__title">Top Rated Reviews</h2>
      <div class="grid grid--3-cols">
        {
          sortedTopRatedReviews.map((review) => (
            <ReviewCard {...review} size="large" />
          ))
        }
      </div>
    </div>
  </section>

  <!-- Cuisine Types -->
  <section class="section section--alt">
    <div class="container">
      <h2 class="section__title">Most Reviewed Cuisines</h2>
      <div class="grid grid--3-cols">
        {
          cuisineTypes.map((cuisine) => (
            <CategoryCard
              count={cuisine.count}
              name={capitalize(cuisine.name)}
              type="cuisine"
              href={`/category/cuisine/${cuisine.name.toLowerCase()}`}
            />
          ))
        }
      </div>
    </div>
  </section>

  <!-- Locations -->
  <section class="section">
    <div class="container">
      <h2 class="section__title">Most Reviewed Locations</h2>
      <div class="grid grid--3-cols">
        {
          locations.map((location) => (
            <CategoryCard
              count={location.count}
              name={location.name}
              type="location"
              href={`/category/location/${location.name.toLowerCase()}`}
            />
          ))
        }
      </div>
    </div>
  </section>

  <!-- Latest Reviews -->
  <!-- <section class="section section--alt">
    <div class="container">
      <div class="section__header">
        <h2 class="section__title">Latest Reviews</h2>
        <a href="/reviews" class="btn btn--outline">View All Reviews</a>
      </div>
      <div class="grid grid--2-cols">
        {
          sortedTopRatedReviews.map((review) => (
            <ReviewCard {...review} size="medium" />
          ))
        }
      </div>
    </div>
  </section> -->
</Layout>

<style lang="scss">
  .hero {
    background: linear-gradient(
      135deg,
      var(--color-primary) 0%,
      var(--color-primary-dark) 100%
    );
    color: var(--color-white);
    padding: var(--spacing-16) 0;
    text-align: center;

    .btn--outline {
      color: var(--color-white);
    }
  }

  .hero__content {
    max-width: 600px;
    margin: 0 auto;
  }

  .hero__title {
    font-size: var(--font-size-4xl);
    font-weight: var(--font-weight-bold);
    margin-bottom: var(--spacing-6);
    color: var(--color-white);

    @media (min-width: 640px) {
      font-size: var(--font-size-5xl);
    }
  }

  .hero__subtitle {
    font-size: var(--font-size-lg);
    margin-bottom: var(--spacing-8);
    opacity: 0.9;
    line-height: var(--line-height-relaxed);
  }

  .hero__actions {
    display: flex;
    gap: var(--spacing-4);
    justify-content: center;
    flex-wrap: wrap;
  }

  .section {
    padding: var(--spacing-16) 0;
  }

  .section--alt {
    background-color: var(--color-gray-50);
  }

  .section__title {
    text-align: center;
    margin-bottom: var(--spacing-12);
    font-size: var(--font-size-3xl);
  }

  .section__header {
    display: flex;
    justify-content: space-between;
    align-items: center;
    margin-bottom: var(--spacing-12);
    flex-wrap: wrap;
    gap: var(--spacing-4);
  }

  .section__header .section__title {
    margin-bottom: 0;
    text-align: left;
  }

  @media (max-width: 640px) {
    .section__header {
      flex-direction: column;
      align-items: stretch;
    }

    .section__header .section__title {
      text-align: center;
    }
  }
</style>
