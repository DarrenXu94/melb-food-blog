---
import { getAllReviews } from "../utils/api";
import { reviewDbRowToObject } from "../utils/mappers";

const res = await getAllReviews();
const mappedReviews = res.reviews.map(reviewDbRowToObject);
---

<section class="search-section">
  <form method="GET" class="search-form" id="searchForm">
    <div class="search-form__main">
      <div class="search-input-group">
        <input
          id="searchInput"
          type="search"
          name="q"
          placeholder="Search by restaurant name, cuisine, or location..."
          class="form-input search-input"
          aria-label="Search restaurants"
        />
        <button type="submit" class="btn btn--primary search-btn">Search</button
        >
      </div>
    </div>
  </form>
</section>

<script
  define:vars={{
    reviews: mappedReviews,
  }}
>
  console.log("Reviews loaded:", reviews);

  // Check if the current URL has any query params
  const url = new URL(window.location.href);
  const params = new URLSearchParams(url.search);
  const query = params.get("q");

  console.log("Current search query:", query);

  if (query) {
    document.getElementById("searchInput").value = query;
  }

  const searchForm = document.getElementById("searchForm");
  searchForm.addEventListener("submit", (event) => {
    event.preventDefault();

    console.log(event);

    const url = new URL(window.location.href);
    const params = new URLSearchParams(url.search);
    params.set("q", input.value);
    window.history.replaceState({}, "", `${url.pathname}?${params}`);

    const filteredReviews = reviews.filter((review) => {
      const query = event.target.q.value.toLowerCase();
      return (
        review.properties.name.toLowerCase().includes(query) ||
        review.properties.cuisineType.some((cuisine) =>
          cuisine.toLowerCase().includes(query)
        ) ||
        review.properties.suburb.toLowerCase().includes(query)
      );
    });

    console.log("Filtered reviews:", filteredReviews);

    const resultsGrid = document.getElementById("resultsGrid");
    resultsGrid.innerHTML = ""; // Clear previous results
    filteredReviews.forEach((review) => {
      const reviewCard = document.createElement("div");
      reviewCard.className = "review-card";
      reviewCard.innerHTML = `
        <h3>${review.properties.name}</h3>
        <p>Cuisine: ${review.properties.cuisineType.join(", ")}</p>
        <p>Location: ${review.properties.suburb}</p>
        <p>Rating: ${review.properties.rating}/10</p>
        <a href="/reviews/${review.id}" class="btn btn--outline">View Review</a>
      `;
      resultsGrid.appendChild(reviewCard);
    });
  });

  const input = document.getElementById("searchInput");
  input.addEventListener("input", (event) => {
    const query = event.target.value.toLowerCase();
    console.log("Search query:", query);
  });
</script>
